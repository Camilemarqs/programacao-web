### Testes da API de Alunos

### 1. Verificar se a API está funcionando
GET http://localhost:3000/

### 2. Listar todos os alunos
GET http://localhost:3000/api/alunos

### 3. Buscar aluno por ID
GET http://localhost:3000/api/alunos/1

### 4. Criar novo aluno
POST http://localhost:3000/api/alunos
Content-Type: application/json

{
  "nome": "Carlos Eduardo",
  "email": "carlos.eduardo@email.com",
  "idade": 23,
  "curso": "Engenharia Civil",
  "matricula": "2023005"
}

### 5. Criar outro aluno
POST http://localhost:3000/api/alunos
Content-Type: application/json

{
  "nome": "Fernanda Lima",
  "email": "fernanda.lima@email.com",
  "idade": 20,
  "curso": "Medicina",
  "matricula": "2023006"
}

### 6. Atualizar aluno (ID 1)
PUT http://localhost:3000/api/alunos/1
Content-Type: application/json

{
  "nome": "João Silva Atualizado",
  "email": "joao.silva@email.com",
  "idade": 21,
  "curso": "Engenharia de Software",
  "matricula": "2023001"
}

### 7. Tentar criar aluno com email duplicado (deve dar erro)
POST http://localhost:3000/api/alunos
Content-Type: application/json

{
  "nome": "João Duplicado",
  "email": "joao.silva@email.com",
  "idade": 25,
  "curso": "Direito",
  "matricula": "2023007"
}

### 8. Tentar criar aluno com matrícula duplicada (deve dar erro)
POST http://localhost:3000/api/alunos
Content-Type: application/json

{
  "nome": "Maria Duplicada",
  "email": "maria.duplicada@email.com",
  "idade": 22,
  "curso": "Psicologia",
  "matricula": "2023001"
}

### 9. Buscar aluno inexistente (deve dar erro 404)
GET http://localhost:3000/api/alunos/999

### 10. Deletar aluno
DELETE http://localhost:3000/api/alunos/2

### 11. Listar alunos novamente para ver as mudanças
GET http://localhost:3000/api/alunos 